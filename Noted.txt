docker image ls //list image(installer) docker yg ada

docker image pull redis:latest //menginstall image redis versi terbaru

docker image rm redis:latest //uninstall image redis versi terbaru

docker container ls -a //lihat semua container yg ada
docker container ls //lihat semua container yg running

docker container create --name namacontainernyaapa namaimageyangdipakaiapa:tag //create container

docker container start containerId/namacontainer //run container

docker container stop containerId/namacontainer //stop container

docker container rm containerId/namacontainer //hapus-remove container

docker container logs containerId/namacontainer //lihat log container
docker container logs -f containerId/namacontainer //lihat log container realtime

docker container exec -i -t containerId/namacontainer bin/bash //eksekusi kode program yg ada di dalam container

docker container create --name contohcontainernginx --publish 8080:80 nginx:latest //akses container by host dengan forwarding port host ke port container

docker container create --name contohcontainermongo --env --publish 27017:27017 --env MONGO_INITDB_ROOT_USERNAME=towick --env MONGO_INITDB_ROOT_PASSWORD=towick mongo:latest //konfigurasi aplikasi dapat diubah dinamis tanpa hardcode didalam aplikasi

docker container stats //untuk melihat resource dari masing" container yang ada

docker container create --name contohcontainernginxlimit --publish 8081:80 --cpu 0.5 --memory 100m nginx:latest //limit resource usage memory and cpu container

docker container create --name containerbindmountmongo --publish 27018:27017 --mount "type=bind,source=D:\docker\basic-docker\data-mongo,destination=/data/db" --env MONGO_INITDB_ROOT_USERNAME=towick --env MONGO_INITDB_ROOT_PASSWORD=towick mongo:latest //mounting(sharing)file/folder bind host ke container

docker volume create namavolume //buat docker volume

docker volume ls //list docker volume
